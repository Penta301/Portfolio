{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","../node_modules/semantic-ui-react/dist/es/views/Card/Card.js","../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/crossfader.js","../node_modules/framer-motion/dist/es/animation/animate.js","../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/stack.js","../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/index.js","../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/rotate.js","../node_modules/semantic-ui-react/dist/es/elements/Placeholder/PlaceholderHeader.js","../node_modules/semantic-ui-react/dist/es/elements/Placeholder/PlaceholderImage.js","../node_modules/semantic-ui-react/dist/es/elements/Placeholder/PlaceholderLine.js","../node_modules/semantic-ui-react/dist/es/elements/Placeholder/PlaceholderParagraph.js","../node_modules/semantic-ui-react/dist/es/elements/Placeholder/Placeholder.js","../node_modules/framer-motion/dist/es/animation/animation-controls.js","../node_modules/framer-motion/dist/es/animation/use-animation.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","CardDescription","props","children","className","content","textAlign","classes","cx","useTextAlignProp","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","CardHeader","CardMeta","CardContent","description","extra","header","meta","useKeyOnly","createShorthand","val","autoGenerateKey","CardGroup","centered","doubling","items","itemsPerRow","stackable","useWidthProp","itemsJSX","_map","item","_item$key","key","join","Card","_Component","_this","_len","length","_key","this","concat","handleClick","onClick","_inheritsLoose","render","_this$props","color","fluid","href","image","link","raised","Image","create","defaultProps","ui","wrapped","Component","Content","Description","Group","Header","Meta","createCrossfader","progress","motionValue","options","lead","undefined","follow","crossfadeOpacity","preserveFollowOpacity","prevOptions","__assign","leadState","followState","isActive","finalCrossfadeFrame","prevUpdate","startCrossfadeAnimation","target","transition","hasUpdated","onUpdate","scheduleRender","onComplete","getFrameData","timestamp","getValueTransition","to","value","isMotionValue","startAnimation","stop","animate","set","sync","read","updateCrossfade","_a","_b","latestLeadValues","getLatestValues","assign","latestFollowValues","prevValues","get","leadTargetOpacity","opacity","followTargetOpacity","mix","isVisible","easeCrossfadeIn","easeCrossfadeOut","hasFollowElement","i","numBorders","borderLabel","borders","followRadius","getRadius","leadRadius","radius","Math","max","rotate","backgroundColor","mixColor","mixValues","Boolean","fromLead","toLead","initialProgress","reset","getCrossfadeState","element","setOptions","newOptions","compress","circOut","linear","min","easing","values","radiusName","borderRadius","layoutStack","prevViewportBox","prevDragCursor","stack","Set","state","leadIsExiting","prevState","crossfader","needsCrossfadeAnimation","add","setCrossfader","remove","delete","getLead","updateSnapshot","dragControls","elementDragControls","isDragging","cursorProgress","clearSnapshot","updateLeadAndFollow","order","presence","Presence","Exiting","isPresenceRoot","child","shouldCrossfade","pointTo","setVisibility","config","prevParent","getProjectionParent","Entering","originBox","targetBox","getLayoutState","layout","getFollowLayout","getDefaultTransition","notifyLayoutReady","AnimateSharedLayout","_super","stacks","Map","hasMounted","updateScheduled","renderScheduled","syncContext","createBatcher","syncUpdate","force","scheduleUpdate","forceUpdate","register","addChild","removeChild","__extends","componentDidMount","componentDidUpdate","startLayoutAnimation","shouldComponentUpdate","type","forEach","isPresent","Present","updateStacks","handler","layoutReady","getLayoutId","getStack","parent","context","visualElement","flush","hasRotate","resetValues","transformAxes","hasValue","getStaticValue","setStaticValue","syncRender","resetRotate","shouldResetTransform","resetTransform","snapshotViewportBox","addToStack","removeFromStack","id","has","SharedLayoutContext","Provider","contextType","MotionContext","PlaceholderHeader","PlaceholderImage","square","rectangular","PlaceholderLine","PlaceholderParagraph","Placeholder","inverted","Line","Paragraph","animationControls","pendingAnimations","subscribers","controls","subscribe","start","definition","transitionOverride","animations_1","animateVisualElement","Promise","all","resolve","animation","invariant","setValues","stopAnimation","mount","__spreadArray","__read","then","useAnimation","useConstant","useEffect"],"mappings":"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","file":"static/js/6.b87008be.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var _item$key;\n\n    var key = (_item$key = item.key) != null ? _item$key : [item.header, item.description].join('-');\n    return /*#__PURE__*/React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Card, _Component);\n\n  function Card() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    };\n\n    return _this;\n  }\n\n  var _proto = Card.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        centered = _this$props.centered,\n        children = _this$props.children,\n        className = _this$props.className,\n        color = _this$props.color,\n        content = _this$props.content,\n        description = _this$props.description,\n        extra = _this$props.extra,\n        fluid = _this$props.fluid,\n        header = _this$props.header,\n        href = _this$props.href,\n        image = _this$props.image,\n        link = _this$props.link,\n        meta = _this$props.meta,\n        onClick = _this$props.onClick,\n        raised = _this$props.raised;\n    var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n    var rest = getUnhandledProps(Card, this.props);\n    var ElementType = getElementType(Card, this.props, function () {\n      if (onClick) return 'a';\n    });\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      href: href,\n      onClick: this.handleClick\n    }), Image.create(image, {\n      autoGenerateKey: false,\n      defaultProps: {\n        ui: false,\n        wrapped: true\n      }\n    }), (description || header || meta) && /*#__PURE__*/React.createElement(CardContent, {\n      description: description,\n      header: header,\n      meta: meta\n    }), extra && /*#__PURE__*/React.createElement(CardContent, {\n      extra: true\n    }, extra));\n  };\n\n  return Card;\n}(Component);\n\nCard.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"];\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};\nCard.Content = CardContent;\nCard.Description = CardDescription;\nCard.Group = CardGroup;\nCard.Header = CardHeader;\nCard.Meta = CardMeta;","import { __assign } from 'tslib';\nimport sync, { getFrameData } from 'framesync';\nimport { mix, progress, linear, mixColor, circOut } from 'popmotion';\nimport { animate } from '../../../animation/animate.js';\nimport { getValueTransition } from '../../../animation/utils/transitions.js';\nimport { motionValue } from '../../../value/index.js';\n\nfunction createCrossfader() {\n    /**\n     * The current state of the crossfade as a value between 0 and 1\n     */\n    var progress = motionValue(1);\n    var options = {\n        lead: undefined,\n        follow: undefined,\n        crossfadeOpacity: false,\n        preserveFollowOpacity: false,\n    };\n    var prevOptions = __assign({}, options);\n    var leadState = {};\n    var followState = {};\n    /**\n     *\n     */\n    var isActive = false;\n    /**\n     *\n     */\n    var finalCrossfadeFrame = null;\n    /**\n     * Framestamp of the last frame we updated values at.\n     */\n    var prevUpdate = 0;\n    function startCrossfadeAnimation(target, transition) {\n        var lead = options.lead, follow = options.follow;\n        isActive = true;\n        finalCrossfadeFrame = null;\n        var hasUpdated = false;\n        var onUpdate = function () {\n            hasUpdated = true;\n            lead && lead.scheduleRender();\n            follow && follow.scheduleRender();\n        };\n        var onComplete = function () {\n            isActive = false;\n            /**\n             * If the crossfade animation is no longer active, flag a frame\n             * that we're still allowed to crossfade\n             */\n            finalCrossfadeFrame = getFrameData().timestamp;\n        };\n        transition = transition && getValueTransition(transition, \"crossfade\");\n        return animate(progress, target, __assign(__assign({}, transition), { onUpdate: onUpdate, onComplete: function () {\n                if (!hasUpdated) {\n                    progress.set(target);\n                    /**\n                     * If we never ran an update, for instance if this was an instant transition, fire a\n                     * simulated final frame to ensure the crossfade gets applied correctly.\n                     */\n                    sync.read(onComplete);\n                }\n                else {\n                    onComplete();\n                }\n                onUpdate();\n            } }));\n    }\n    function updateCrossfade() {\n        var _a, _b;\n        /**\n         * We only want to compute the crossfade once per frame, so we\n         * compare the previous update framestamp with the current frame\n         * and early return if they're the same.\n         */\n        var timestamp = getFrameData().timestamp;\n        var lead = options.lead, follow = options.follow;\n        if (timestamp === prevUpdate || !lead)\n            return;\n        prevUpdate = timestamp;\n        /**\n         * Merge each component's latest values into our crossfaded state\n         * before crossfading.\n         */\n        var latestLeadValues = lead.getLatestValues();\n        Object.assign(leadState, latestLeadValues);\n        var latestFollowValues = follow\n            ? follow.getLatestValues()\n            : options.prevValues;\n        Object.assign(followState, latestFollowValues);\n        var p = progress.get();\n        /**\n         * Crossfade the opacity between the two components. This will result\n         * in a different opacity for each component.\n         */\n        var leadTargetOpacity = (_a = latestLeadValues.opacity) !== null && _a !== void 0 ? _a : 1;\n        var followTargetOpacity = (_b = latestFollowValues === null || latestFollowValues === void 0 ? void 0 : latestFollowValues.opacity) !== null && _b !== void 0 ? _b : 1;\n        if (options.crossfadeOpacity && follow) {\n            leadState.opacity = mix(\n            /**\n             * If the follow child has been completely hidden we animate\n             * this opacity from its previous opacity, but otherwise from completely transparent.\n             */\n            follow.isVisible !== false ? 0 : followTargetOpacity, leadTargetOpacity, easeCrossfadeIn(p));\n            followState.opacity = options.preserveFollowOpacity\n                ? followTargetOpacity\n                : mix(followTargetOpacity, 0, easeCrossfadeOut(p));\n        }\n        else if (!follow) {\n            leadState.opacity = mix(followTargetOpacity, leadTargetOpacity, p);\n        }\n        mixValues(leadState, followState, latestLeadValues, latestFollowValues || {}, Boolean(follow), p);\n    }\n    return {\n        isActive: function () {\n            return leadState &&\n                (isActive || getFrameData().timestamp === finalCrossfadeFrame);\n        },\n        fromLead: function (transition) {\n            return startCrossfadeAnimation(0, transition);\n        },\n        toLead: function (transition) {\n            var initialProgress = 0;\n            if (!options.prevValues && !options.follow) {\n                /**\n                 * If we're not coming from anywhere, start at the end of the animation.\n                 */\n                initialProgress = 1;\n            }\n            else if (prevOptions.lead === options.follow &&\n                prevOptions.follow === options.lead) {\n                /**\n                 * If we're swapping follow/lead we can reverse the progress\n                 */\n                initialProgress = 1 - progress.get();\n            }\n            progress.set(initialProgress);\n            return startCrossfadeAnimation(1, transition);\n        },\n        reset: function () { return progress.set(1); },\n        stop: function () { return progress.stop(); },\n        getCrossfadeState: function (element) {\n            updateCrossfade();\n            if (element === options.lead) {\n                return leadState;\n            }\n            else if (element === options.follow) {\n                return followState;\n            }\n        },\n        setOptions: function (newOptions) {\n            prevOptions = options;\n            options = newOptions;\n            leadState = {};\n            followState = {};\n        },\n        getLatestValues: function () {\n            return leadState;\n        },\n    };\n}\nvar easeCrossfadeIn = compress(0, 0.5, circOut);\nvar easeCrossfadeOut = compress(0.5, 0.95, linear);\nfunction compress(min, max, easing) {\n    return function (p) {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\nvar borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nvar numBorders = borders.length;\nfunction mixValues(leadState, followState, latestLeadValues, latestFollowValues, hasFollowElement, p) {\n    /**\n     * Mix border radius\n     */\n    for (var i = 0; i < numBorders; i++) {\n        var borderLabel = \"border\" + borders[i] + \"Radius\";\n        var followRadius = getRadius(latestFollowValues, borderLabel);\n        var leadRadius = getRadius(latestLeadValues, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        /**\n         * Currently we're only crossfading between numerical border radius.\n         * It would be possible to crossfade between percentages for a little\n         * extra bundle size.\n         */\n        if (typeof followRadius === \"number\" &&\n            typeof leadRadius === \"number\") {\n            var radius = Math.max(mix(followRadius, leadRadius, p), 0);\n            leadState[borderLabel] = followState[borderLabel] = radius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (latestFollowValues.rotate || latestLeadValues.rotate) {\n        var rotate = mix(latestFollowValues.rotate || 0, latestLeadValues.rotate || 0, p);\n        leadState.rotate = followState.rotate = rotate;\n    }\n    /**\n     * We only want to mix the background color if there's a follow element\n     * that we're not crossfading opacity between. For instance with switch\n     * AnimateSharedLayout animations, this helps the illusion of a continuous\n     * element being animated but also cuts down on the number of paints triggered\n     * for elements where opacity is doing that work for us.\n     */\n    if (!hasFollowElement &&\n        latestLeadValues.backgroundColor &&\n        latestFollowValues.backgroundColor) {\n        /**\n         * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n         * We could probably create a mixer that runs at the start of the animation but\n         * the idea behind the crossfader is that it runs dynamically between two potentially\n         * changing targets (ie opacity or borderRadius may be animating independently via variants)\n         */\n        leadState.backgroundColor = followState.backgroundColor = mixColor(latestFollowValues.backgroundColor, latestLeadValues.backgroundColor)(p);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n\nexport { createCrossfader };\n","import { motionValue } from '../value/index.js';\nimport { isMotionValue } from '../value/utils/is-motion-value.js';\nimport { startAnimation } from './utils/transitions.js';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition) {\n    if (transition === void 0) { transition = {}; }\n    var value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: function () { return value.stop(); },\n    };\n}\n\nexport { animate };\n","import { __assign } from 'tslib';\nimport { Presence } from '../types.js';\nimport { elementDragControls } from '../../../gestures/drag/VisualElementDragControls.js';\nimport { createCrossfader } from './crossfader.js';\n\nfunction layoutStack() {\n    var stack = new Set();\n    var state = { leadIsExiting: false };\n    var prevState = __assign({}, state);\n    var prevValues;\n    var prevViewportBox;\n    var prevDragCursor;\n    var crossfader = createCrossfader();\n    var needsCrossfadeAnimation = false;\n    function getFollowViewportBox() {\n        return state.follow ? state.follow.prevViewportBox : prevViewportBox;\n    }\n    function getFollowLayout() {\n        var _a;\n        return (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getLayoutState().layout;\n    }\n    return {\n        add: function (element) {\n            element.setCrossfader(crossfader);\n            stack.add(element);\n            /**\n             * Hydrate new element with previous drag position if we have one\n             */\n            if (prevDragCursor)\n                element.prevDragCursor = prevDragCursor;\n            if (!state.lead)\n                state.lead = element;\n        },\n        remove: function (element) {\n            stack.delete(element);\n        },\n        getLead: function () { return state.lead; },\n        updateSnapshot: function () {\n            if (!state.lead)\n                return;\n            prevValues = crossfader.isActive()\n                ? crossfader.getLatestValues()\n                : state.lead.getLatestValues();\n            prevViewportBox = state.lead.prevViewportBox;\n            var dragControls = elementDragControls.get(state.lead);\n            if (dragControls && dragControls.isDragging) {\n                prevDragCursor = dragControls.cursorProgress;\n            }\n        },\n        clearSnapshot: function () {\n            prevDragCursor = prevViewportBox = undefined;\n        },\n        updateLeadAndFollow: function () {\n            var _a;\n            prevState = __assign({}, state);\n            var lead;\n            var follow;\n            var order = Array.from(stack);\n            for (var i = order.length; i--; i >= 0) {\n                var element = order[i];\n                if (lead)\n                    follow !== null && follow !== void 0 ? follow : (follow = element);\n                lead !== null && lead !== void 0 ? lead : (lead = element);\n                if (lead && follow)\n                    break;\n            }\n            state.lead = lead;\n            state.follow = follow;\n            state.leadIsExiting = ((_a = state.lead) === null || _a === void 0 ? void 0 : _a.presence) === Presence.Exiting;\n            crossfader.setOptions({\n                lead: lead,\n                follow: follow,\n                prevValues: prevValues,\n                crossfadeOpacity: (follow === null || follow === void 0 ? void 0 : follow.isPresenceRoot) || (lead === null || lead === void 0 ? void 0 : lead.isPresenceRoot),\n            });\n            if (\n            // Don't crossfade if we've just animated back from lead and switched the\n            // old follow to the new lead.\n            state.lead !== prevState.follow &&\n                (prevState.lead !== state.lead ||\n                    prevState.leadIsExiting !== state.leadIsExiting)) {\n                needsCrossfadeAnimation = true;\n            }\n        },\n        animate: function (child, shouldCrossfade) {\n            var _a;\n            if (shouldCrossfade === void 0) { shouldCrossfade = false; }\n            if (child === state.lead) {\n                if (shouldCrossfade) {\n                    /**\n                     * Point a lead to itself in case it was previously pointing\n                     * to a different visual element\n                     */\n                    child.pointTo(state.lead);\n                }\n                else {\n                    child.setVisibility(true);\n                }\n                var config = {};\n                var prevParent = (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getProjectionParent();\n                if (prevParent) {\n                    /**\n                     * We'll use this to determine if the element or its layoutId has been reparented.\n                     */\n                    config.prevParent = prevParent;\n                }\n                if (child.presence === Presence.Entering) {\n                    config.originBox = getFollowViewportBox();\n                }\n                else if (child.presence === Presence.Exiting) {\n                    config.targetBox = getFollowLayout();\n                }\n                if (needsCrossfadeAnimation) {\n                    needsCrossfadeAnimation = false;\n                    var transition = child.getDefaultTransition();\n                    child.presence === Presence.Entering\n                        ? crossfader.toLead(transition)\n                        : crossfader.fromLead(transition);\n                }\n                child.notifyLayoutReady(config);\n            }\n            else {\n                if (shouldCrossfade) {\n                    state.lead && child.pointTo(state.lead);\n                }\n                else {\n                    child.setVisibility(false);\n                }\n            }\n        },\n    };\n}\n\nexport { layoutStack };\n","import { __extends, __assign } from 'tslib';\nimport * as React from 'react';\nimport { Presence } from './types.js';\nimport { layoutStack } from './utils/stack.js';\nimport { SharedLayoutContext } from '../../context/SharedLayoutContext.js';\nimport { MotionContext } from '../../context/MotionContext/index.js';\nimport { resetRotate } from './utils/rotate.js';\nimport { createBatcher } from './utils/batcher.js';\nimport { snapshotViewportBox } from '../../render/dom/projection/utils.js';\n\n/**\n * @public\n */\nvar AnimateSharedLayout = /** @class */ (function (_super) {\n    __extends(AnimateSharedLayout, _super);\n    function AnimateSharedLayout() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * A list of all the children in the shared layout\n         */\n        _this.children = new Set();\n        /**\n         * As animate components with a defined `layoutId` are added/removed to the tree,\n         * we store them in order. When one is added, it will animate out from the\n         * previous one, and when it's removed, it'll animate to the previous one.\n         */\n        _this.stacks = new Map();\n        /**\n         * Track whether the component has mounted. If it hasn't, the presence of added children\n         * are set to Present, whereas if it has they're considered Entering\n         */\n        _this.hasMounted = false;\n        /**\n         * Track whether we already have an update scheduled. If we don't, we'll run snapshots\n         * and schedule one.\n         */\n        _this.updateScheduled = false;\n        /**\n         * Tracks whether we already have a render scheduled. If we don't, we'll force one with this.forceRender\n         */\n        _this.renderScheduled = false;\n        /**\n         * The methods provided to all children in the shared layout tree.\n         */\n        _this.syncContext = __assign(__assign({}, createBatcher()), { syncUpdate: function (force) { return _this.scheduleUpdate(force); }, forceUpdate: function () {\n                // By copying syncContext to itself, when this component re-renders it'll also re-render\n                // all children subscribed to the SharedLayout context.\n                _this.syncContext = __assign({}, _this.syncContext);\n                _this.scheduleUpdate(true);\n            }, register: function (child) { return _this.addChild(child); }, remove: function (child) { return _this.removeChild(child); } });\n        return _this;\n    }\n    AnimateSharedLayout.prototype.componentDidMount = function () {\n        this.hasMounted = true;\n    };\n    AnimateSharedLayout.prototype.componentDidUpdate = function () {\n        this.startLayoutAnimation();\n    };\n    AnimateSharedLayout.prototype.shouldComponentUpdate = function () {\n        this.renderScheduled = true;\n        return true;\n    };\n    AnimateSharedLayout.prototype.startLayoutAnimation = function () {\n        var _this = this;\n        /**\n         * Reset update and render scheduled status\n         */\n        this.renderScheduled = this.updateScheduled = false;\n        var type = this.props.type;\n        /**\n         * Update presence metadata based on the latest AnimatePresence status.\n         * This is a kind of goofy way of dealing with this, perhaps there's a better model to find.\n         */\n        this.children.forEach(function (child) {\n            if (!child.isPresent) {\n                child.presence = Presence.Exiting;\n            }\n            else if (child.presence !== Presence.Entering) {\n                child.presence =\n                    child.presence === Presence.Exiting\n                        ? Presence.Entering\n                        : Presence.Present;\n            }\n        });\n        this.updateStacks();\n        /**\n         * Create a handler which we can use to flush the children animations\n         */\n        var handler = {\n            layoutReady: function (child) {\n                if (child.getLayoutId() !== undefined) {\n                    var stack = _this.getStack(child);\n                    stack.animate(child, type === \"crossfade\");\n                }\n                else {\n                    child.notifyLayoutReady();\n                }\n            },\n            parent: this.context.visualElement,\n        };\n        /**\n         * Shared layout animations can be used without the AnimateSharedLayout wrapping component.\n         * This requires some co-ordination across components to stop layout thrashing\n         * and ensure measurements are taken at the correct time.\n         *\n         * Here we use that same mechanism of schedule/flush.\n         */\n        this.children.forEach(function (child) { return _this.syncContext.add(child); });\n        this.syncContext.flush(handler);\n        /**\n         * Clear snapshots so subsequent rerenders don't retain memory of outgoing components\n         */\n        this.stacks.forEach(function (stack) { return stack.clearSnapshot(); });\n    };\n    AnimateSharedLayout.prototype.updateStacks = function () {\n        this.stacks.forEach(function (stack) { return stack.updateLeadAndFollow(); });\n    };\n    AnimateSharedLayout.prototype.scheduleUpdate = function (force) {\n        if (force === void 0) { force = false; }\n        if (!(force || !this.updateScheduled))\n            return;\n        /**\n         * Flag we've scheduled an update\n         */\n        this.updateScheduled = true;\n        /**\n         * Write: Reset transforms so bounding boxes can be accurately measured.\n         */\n        this.children.forEach(function (child) {\n            resetRotate(child);\n            if (child.shouldResetTransform())\n                child.resetTransform();\n        });\n        /**\n         * Read: Snapshot children\n         */\n        this.children.forEach(snapshotViewportBox);\n        /**\n         * Every child keeps a local snapshot, but we also want to record\n         * snapshots of the visible children as, if they're are being removed\n         * in this render, we can still access them.\n         *\n         * TODO: What would be better here is doing a single loop where we\n         * only snapshotViewportBoxes of undefined layoutIds and then one for each stack\n         */\n        this.stacks.forEach(function (stack) { return stack.updateSnapshot(); });\n        /**\n         * Force a rerender by setting state if we aren't already going to render.\n         */\n        if (force || !this.renderScheduled) {\n            this.renderScheduled = true;\n            this.forceUpdate();\n        }\n    };\n    AnimateSharedLayout.prototype.addChild = function (child) {\n        this.children.add(child);\n        this.addToStack(child);\n        child.presence = this.hasMounted ? Presence.Entering : Presence.Present;\n    };\n    AnimateSharedLayout.prototype.removeChild = function (child) {\n        this.scheduleUpdate();\n        this.children.delete(child);\n        this.removeFromStack(child);\n    };\n    AnimateSharedLayout.prototype.addToStack = function (child) {\n        var stack = this.getStack(child);\n        stack === null || stack === void 0 ? void 0 : stack.add(child);\n    };\n    AnimateSharedLayout.prototype.removeFromStack = function (child) {\n        var stack = this.getStack(child);\n        stack === null || stack === void 0 ? void 0 : stack.remove(child);\n    };\n    /**\n     * Return a stack of animate children based on the provided layoutId.\n     * Will create a stack if none currently exists with that layoutId.\n     */\n    AnimateSharedLayout.prototype.getStack = function (child) {\n        var id = child.getLayoutId();\n        if (id === undefined)\n            return;\n        // Create stack if it doesn't already exist\n        !this.stacks.has(id) && this.stacks.set(id, layoutStack());\n        return this.stacks.get(id);\n    };\n    AnimateSharedLayout.prototype.render = function () {\n        return (React.createElement(SharedLayoutContext.Provider, { value: this.syncContext }, this.props.children));\n    };\n    AnimateSharedLayout.contextType = MotionContext;\n    return AnimateSharedLayout;\n}(React.Component));\n\nexport { AnimateSharedLayout };\n","import { transformAxes } from '../../../render/html/utils/transform.js';\n\nfunction resetRotate(child) {\n    // If there's no detected rotation values, we can early return without a forced render.\n    var hasRotate = false;\n    // Keep a record of all the values we've reset\n    var resetValues = {};\n    // Check the rotate value of all axes and reset to 0\n    for (var i = 0; i < transformAxes.length; i++) {\n        var axis = transformAxes[i];\n        var key = \"rotate\" + axis;\n        // If this rotation doesn't exist as a motion value, then we don't\n        // need to reset it\n        if (!child.hasValue(key) || child.getStaticValue(key) === 0)\n            continue;\n        hasRotate = true;\n        // Record the rotation and then temporarily set it to 0\n        resetValues[key] = child.getStaticValue(key);\n        child.setStaticValue(key, 0);\n    }\n    // If there's no rotation values, we don't need to do any more.\n    if (!hasRotate)\n        return;\n    // Force a render of this element to apply the transform with all rotations\n    // set to 0.\n    child.syncRender();\n    // Put back all the values we reset\n    for (var key in resetValues) {\n        child.setStaticValue(key, resetValues[key]);\n    }\n    // Schedule a render for the next frame. This ensures we won't visually\n    // see the element with the reset rotate value applied.\n    child.scheduleRender();\n}\n\nexport { resetRotate };\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A placeholder can contain a header.\n */\n\nfunction PlaceholderHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      image = props.image;\n  var classes = cx(useKeyOnly(image, 'image'), 'header', className);\n  var rest = getUnhandledProps(PlaceholderHeader, props);\n  var ElementType = getElementType(PlaceholderHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nPlaceholderHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"image\"];\nPlaceholderHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A placeholder can contain an image. */\n  image: PropTypes.bool\n} : {};\nexport default PlaceholderHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A placeholder can contain an image.\n */\n\nfunction PlaceholderImage(props) {\n  var className = props.className,\n      square = props.square,\n      rectangular = props.rectangular;\n  var classes = cx(useKeyOnly(square, 'square'), useKeyOnly(rectangular, 'rectangular'), 'image', className);\n  var rest = getUnhandledProps(PlaceholderImage, props);\n  var ElementType = getElementType(PlaceholderImage, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nPlaceholderImage.handledProps = [\"as\", \"className\", \"rectangular\", \"square\"];\nPlaceholderImage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An image can modify size correctly with responsive styles. */\n  square: customPropTypes.every([customPropTypes.disallow(['rectangular']), PropTypes.bool]),\n\n  /** An image can modify size correctly with responsive styles. */\n  rectangular: customPropTypes.every([customPropTypes.disallow(['square']), PropTypes.bool])\n} : {};\nexport default PlaceholderImage;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder can contain have lines of text.\n */\n\nfunction PlaceholderLine(props) {\n  var className = props.className,\n      length = props.length;\n  var classes = cx('line', length, className);\n  var rest = getUnhandledProps(PlaceholderLine, props);\n  var ElementType = getElementType(PlaceholderLine, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nPlaceholderLine.handledProps = [\"as\", \"className\", \"length\"];\nPlaceholderLine.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A line can specify how long its contents should appear. */\n  length: PropTypes.oneOf(['full', 'very long', 'long', 'medium', 'short', 'very short'])\n} : {};\nexport default PlaceholderLine;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder can contain a paragraph.\n */\n\nfunction PlaceholderParagraph(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('paragraph', className);\n  var rest = getUnhandledProps(PlaceholderParagraph, props);\n  var ElementType = getElementType(PlaceholderParagraph, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nPlaceholderParagraph.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nPlaceholderParagraph.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default PlaceholderParagraph;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport PlaceholderHeader from './PlaceholderHeader';\nimport PlaceholderImage from './PlaceholderImage';\nimport PlaceholderLine from './PlaceholderLine';\nimport PlaceholderParagraph from './PlaceholderParagraph';\n/**\n * A placeholder is used to reserve space for content that soon will appear in a layout.\n */\n\nfunction Placeholder(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      inverted = props.inverted;\n  var classes = cx('ui', useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), 'placeholder', className);\n  var rest = getUnhandledProps(Placeholder, props);\n  var ElementType = getElementType(Placeholder, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nPlaceholder.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"inverted\"];\nPlaceholder.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A fluid placeholder takes up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** A placeholder can have their colors inverted. */\n  inverted: PropTypes.bool\n} : {};\nPlaceholder.Header = PlaceholderHeader;\nPlaceholder.Image = PlaceholderImage;\nPlaceholder.Line = PlaceholderLine;\nPlaceholder.Paragraph = PlaceholderParagraph;\nexport default Placeholder;","import { __spreadArray, __read } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { stopAnimation, animateVisualElement } from '../render/utils/animation.js';\nimport { setValues } from '../render/utils/setters.js';\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    var hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    var pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    var subscribers = new Set();\n    var controls = {\n        subscribe: function (visualElement) {\n            subscribers.add(visualElement);\n            return function () { return void subscribers.delete(visualElement); };\n        },\n        start: function (definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                var animations_1 = [];\n                subscribers.forEach(function (visualElement) {\n                    animations_1.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride: transitionOverride,\n                    }));\n                });\n                return Promise.all(animations_1);\n            }\n            else {\n                return new Promise(function (resolve) {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve: resolve,\n                    });\n                });\n            }\n        },\n        set: function (definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach(function (visualElement) {\n                setValues(visualElement, definition);\n            });\n        },\n        stop: function () {\n            subscribers.forEach(function (visualElement) {\n                stopAnimation(visualElement);\n            });\n        },\n        mount: function () {\n            hasMounted = true;\n            pendingAnimations.forEach(function (_a) {\n                var animation = _a.animation, resolve = _a.resolve;\n                controls.start.apply(controls, __spreadArray([], __read(animation))).then(resolve);\n            });\n            return function () {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.js';\nimport { useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.js';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * @library\n *\n * ```jsx\n * import * as React from 'react'\n * import { Frame, useAnimation } from 'framer'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <Frame animate={controls} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimation() {\n    var controls = useConstant(animationControls);\n    useEffect(controls.mount, []);\n    return controls;\n}\n\nexport { useAnimation };\n"],"sourceRoot":""}