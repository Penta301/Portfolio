{"ast":null,"code":"var _jsxFileName = \"/home/juanemilio/Desktop/Portfolio_1/frontend/src/components/CardComponent/ContinerCard.js\",\n    _s = $RefreshSig$();\n\nimport CustomCard from \"./CustomCard\";\nimport DisplayedCard from \"./DisplayedCard\";\nimport { useState } from \"react\";\nimport { AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ContinerCard({\n  data\n}) {\n  _s();\n\n  const [contentId, setContentId] = useState(false);\n\n  const handleClick = (value, setter, content) => {\n    if (content) {\n      setter(false);\n      return;\n    }\n\n    setter(value);\n  };\n\n  const handleAnimation = () => {\n    if (window.innerWidth >= 1100) {\n      console.log(\"executed\");\n      return {\n        y: -350,\n        x: 500,\n        opacity: 1\n      };\n    }\n\n    console.log(\"executed_minor\");\n    return {\n      y: -350,\n      x: 0,\n      opacity: 1\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AnimateSharedLayout, {\n      type: \"crossfade\",\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: [contentId && data.filter(card => card.title === contentId).map((card, index) => {\n          const {\n            title,\n            date,\n            description,\n            time,\n            history,\n            imgs,\n            technologies\n          } = card;\n          let id = title + index;\n          return /*#__PURE__*/_jsxDEV(DisplayedCard, {\n            title: title,\n            date: date,\n            description: description,\n            history: history,\n            time: time,\n            cb: value => {\n              handleClick(value, setContentId, contentId);\n            },\n            id: title,\n            imgs: imgs,\n            technologies: technologies,\n            animation: handleAnimation\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this);\n        }), data.map(card => {\n          const {\n            mainImg,\n            title,\n            date,\n            description,\n            time\n          } = card;\n          return /*#__PURE__*/_jsxDEV(CustomCard, {\n            img: mainImg,\n            title: title,\n            date: date,\n            description: description,\n            time: time,\n            cb: value => {\n              handleClick(value, setContentId, contentId);\n            },\n            id: title\n          }, title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ContinerCard, \"ASNudtjqLYRlUqAXMEVM7WDpnoQ=\");\n\n_c = ContinerCard;\nexport default ContinerCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContinerCard\");","map":{"version":3,"sources":["/home/juanemilio/Desktop/Portfolio_1/frontend/src/components/CardComponent/ContinerCard.js"],"names":["CustomCard","DisplayedCard","useState","AnimateSharedLayout","AnimatePresence","ContinerCard","data","contentId","setContentId","handleClick","value","setter","content","handleAnimation","window","innerWidth","console","log","y","x","opacity","filter","card","title","map","index","date","description","time","history","imgs","technologies","id","mainImg"],"mappings":"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","sourcesContent":["import CustomCard from \"./CustomCard\";\nimport DisplayedCard from \"./DisplayedCard\";\n\nimport { useState } from \"react\";\nimport { AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\n\nfunction ContinerCard({ data }) {\n  const [contentId, setContentId] = useState(false);\n\n  const handleClick = (value, setter, content) => {\n    if (content) {\n      setter(false);\n      return;\n    }\n    setter(value);\n  };\n\n  const handleAnimation = () => {\n    if (window.innerWidth >= 1100) {\n      console.log(\"executed\");\n      return { y: -350, x: 500, opacity: 1 };\n    }\n    console.log(\"executed_minor\");\n    return { y: -350, x: 0, opacity: 1 };\n  };\n\n  return (\n    <>\n      <AnimateSharedLayout type={\"crossfade\"}>\n        <AnimatePresence>\n          {contentId &&\n            data\n              .filter((card) => card.title === contentId)\n              .map((card, index) => {\n                const {\n                  title,\n                  date,\n                  description,\n                  time,\n                  history,\n                  imgs,\n                  technologies,\n                } = card;\n                let id = title + index;\n                return (\n                  <DisplayedCard\n                    key={id}\n                    title={title}\n                    date={date}\n                    description={description}\n                    history={history}\n                    time={time}\n                    cb={(value) => {\n                      handleClick(value, setContentId, contentId);\n                    }}\n                    id={title}\n                    imgs={imgs}\n                    technologies={technologies}\n                    animation={handleAnimation}\n                  />\n                );\n              })}\n          {data.map((card) => {\n            const { mainImg, title, date, description, time } = card;\n            return (\n              <CustomCard\n                key={title}\n                img={mainImg}\n                title={title}\n                date={date}\n                description={description}\n                time={time}\n                cb={(value) => {\n                  handleClick(value, setContentId, contentId);\n                }}\n                id={title}\n              />\n            );\n          })}\n        </AnimatePresence>\n      </AnimateSharedLayout>\n    </>\n  );\n}\n\nexport default ContinerCard;\n"]},"metadata":{},"sourceType":"module"}