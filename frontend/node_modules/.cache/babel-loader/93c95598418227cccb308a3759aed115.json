{"ast":null,"code":"var _jsxFileName = \"/home/juanemilio/Desktop/Portfolio/portfolio/src/helpers/Filter/Filter.js\",\n    _s = $RefreshSig$();\n\nimport FilterLogic from \"./FilterLogic\";\nimport { Button } from \"semantic-ui-react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Filter({\n  data\n}) {\n  _s();\n\n  const [filterData, setFilterData] = useState(data);\n  const {\n    cleanData,\n    filterCategories\n  } = FilterLogic();\n\n  const newItems = (data, filter, setter, type) => {\n    const newData = filter(data, type);\n    setter(newData);\n  };\n\n  const test = cleanData(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      basic: true,\n      color: \"blue\",\n      inverted: true,\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), test.map((category, index) => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => newItems(filterData, filterCategories, setFilterData, category),\n        basic: true,\n        color: \"blue\",\n        inverted: true,\n        children: category\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this);\n    }), filterData.map(item => {\n      console.log(item);\n      const {\n        title\n      } = {\n        item\n      };\n      console.log(item.title);\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Filter, \"6XjKWTOt1+GhG30vST7OGJJlKPY=\");\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/home/juanemilio/Desktop/Portfolio/portfolio/src/helpers/Filter/Filter.js"],"names":["FilterLogic","Button","useState","Filter","data","filterData","setFilterData","cleanData","filterCategories","newItems","filter","setter","type","newData","test","map","category","index","item","console","log","title"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA0B;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAACE,IAAD,CAA5C;AACA,QAAM;AAAEG,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAkCR,WAAW,EAAnD;;AACA,QAAMS,QAAQ,GAAG,CAACL,IAAD,EAAOM,MAAP,EAAeC,MAAf,EAAuBC,IAAvB,KAAgC;AAC/C,UAAMC,OAAO,GAAGH,MAAM,CAACN,IAAD,EAAOQ,IAAP,CAAtB;AACAD,IAAAA,MAAM,CAACE,OAAD,CAAN;AACD,GAHD;;AAKA,QAAMC,IAAI,GAAGP,SAAS,CAACH,IAAD,CAAtB;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,IAAf;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,QAAQ,EAAE,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGU,IAAI,CAACC,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC7B,0BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MACPR,QAAQ,CAACJ,UAAD,EAAaG,gBAAb,EAA+BF,aAA/B,EAA8CU,QAA9C,CAFZ;AAIE,QAAA,KAAK,EAAE,IAJT;AAKE,QAAA,KAAK,EAAC,MALR;AAME,QAAA,QAAQ,EAAE,IANZ;AAAA,kBASGA;AATH,SAOOC,KAPP;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAdA,CAJH,EAmBGZ,UAAU,CAACU,GAAX,CAAgBG,IAAD,IAAU;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAY;AAAEH,QAAAA;AAAF,OAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACA,0BAAO;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KALA,CAnBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAtCQlB,M;;KAAAA,M;AAwCT,eAAeA,MAAf","sourcesContent":["import FilterLogic from \"./FilterLogic\";\nimport { Button } from \"semantic-ui-react\";\nimport { useState } from \"react\";\n\nfunction Filter({ data }) {\n  const [filterData, setFilterData] = useState(data);\n  const { cleanData, filterCategories } = FilterLogic();\n  const newItems = (data, filter, setter, type) => {\n    const newData = filter(data, type);\n    setter(newData);\n  };\n\n  const test = cleanData(data);\n\n  return (\n    <div>\n      <Button basic={true} color=\"blue\" inverted={true}>\n        All\n      </Button>\n      {test.map((category, index) => {\n        return (\n          <Button\n            onClick={() =>\n              newItems(filterData, filterCategories, setFilterData, category)\n            }\n            basic={true}\n            color=\"blue\"\n            inverted={true}\n            key={index}\n          >\n            {category}\n          </Button>\n        );\n      })}\n      {filterData.map((item) => {\n        console.log(item);\n        const { title } = { item };\n        console.log(item.title);\n        return <h4>{title}</h4>;\n      })}\n    </div>\n  );\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}