{"ast":null,"code":"var _jsxFileName = \"/home/juanemilio/Desktop/Portfolio/portfolio/src/components/CardComponent/ContinerCard.js\",\n    _s = $RefreshSig$();\n\nimport Data from \"../../Data\";\nimport CustomCard from \"./CustomCard\";\nimport DisplayedCard from \"./DisplayedCard\";\nimport { useState } from \"react\";\nimport { AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ContinerCard() {\n  _s();\n\n  const [contentId, setContentId] = useState(false);\n\n  const handleClick = (value, setter, content) => {\n    if (content) {\n      setter(false);\n      return;\n    }\n\n    setter(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AnimateSharedLayout, {\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: Data.map(card => {\n          const {\n            mainImg,\n            title,\n            date,\n            description,\n            time\n          } = card;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CustomCard, {\n              img: mainImg,\n              title: title,\n              date: date,\n              description: description,\n              time: time,\n              cb: value => {\n                handleClick(value, setContentId, contentId);\n              },\n              id: title\n            }, title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), contentId && Data.filter(card => card.title === contentId).map((card, index) => {\n              const {\n                mainImg,\n                title,\n                date,\n                description,\n                time,\n                history\n              } = card;\n              let id = title + index;\n              return /*#__PURE__*/_jsxDEV(DisplayedCard, {\n                img: mainImg,\n                title: title,\n                date: date,\n                description: description,\n                history: history,\n                time: time,\n                cb: value => {\n                  handleClick(value, setContentId, contentId);\n                },\n                id: title\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 25\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ContinerCard, \"ASNudtjqLYRlUqAXMEVM7WDpnoQ=\");\n\n_c = ContinerCard;\nexport default ContinerCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContinerCard\");","map":{"version":3,"sources":["/home/juanemilio/Desktop/Portfolio/portfolio/src/components/CardComponent/ContinerCard.js"],"names":["Data","CustomCard","DisplayedCard","useState","AnimateSharedLayout","AnimatePresence","ContinerCard","contentId","setContentId","handleClick","value","setter","content","map","card","mainImg","title","date","description","time","filter","index","history","id"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,EAA8BC,eAA9B,QAAqD,eAArD;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMM,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,OAAhB,KAA4B;AAC9C,QAAIA,OAAJ,EAAa;AACXD,MAAAA,MAAM,CAAC,KAAD,CAAN;AACA;AACD;;AACDA,IAAAA,MAAM,CAACD,KAAD,CAAN;AACD,GAND;;AAQA,sBACE;AAAA,2BACE,QAAC,mBAAD;AAAA,6BACE,QAAC,eAAD;AAAA,kBACGV,IAAI,CAACa,GAAL,CAAUC,IAAD,IAAU;AAClB,gBAAM;AAAEC,YAAAA,OAAF;AAAWC,YAAAA,KAAX;AAAkBC,YAAAA,IAAlB;AAAwBC,YAAAA,WAAxB;AAAqCC,YAAAA;AAArC,cAA8CL,IAApD;AACA,8BACE;AAAA,oCACE,QAAC,UAAD;AAEE,cAAA,GAAG,EAAEC,OAFP;AAGE,cAAA,KAAK,EAAEC,KAHT;AAIE,cAAA,IAAI,EAAEC,IAJR;AAKE,cAAA,WAAW,EAAEC,WALf;AAME,cAAA,IAAI,EAAEC,IANR;AAOE,cAAA,EAAE,EAAGT,KAAD,IAAW;AACbD,gBAAAA,WAAW,CAACC,KAAD,EAAQF,YAAR,EAAsBD,SAAtB,CAAX;AACD,eATH;AAUE,cAAA,EAAE,EAAES;AAVN,eACOA,KADP;AAAA;AAAA;AAAA;AAAA,oBADF,EAaGT,SAAS,IACRP,IAAI,CAACoB,MAAL,CAAaN,IAAD,IAAUA,IAAI,CAACE,KAAL,KAAeT,SAArC,EAAgDM,GAAhD,CACE,CAACC,IAAD,EAAOO,KAAP,KAAiB;AACf,oBAAM;AACJN,gBAAAA,OADI;AAEJC,gBAAAA,KAFI;AAGJC,gBAAAA,IAHI;AAIJC,gBAAAA,WAJI;AAKJC,gBAAAA,IALI;AAMJG,gBAAAA;AANI,kBAOFR,IAPJ;AAQA,kBAAIS,EAAE,GAAGP,KAAK,GAAGK,KAAjB;AACA,kCACE,QAAC,aAAD;AAEE,gBAAA,GAAG,EAAEN,OAFP;AAGE,gBAAA,KAAK,EAAEC,KAHT;AAIE,gBAAA,IAAI,EAAEC,IAJR;AAKE,gBAAA,WAAW,EAAEC,WALf;AAME,gBAAA,OAAO,EAAEI,OANX;AAOE,gBAAA,IAAI,EAAEH,IAPR;AAQE,gBAAA,EAAE,EAAGT,KAAD,IAAW;AACbD,kBAAAA,WAAW,CAACC,KAAD,EAAQF,YAAR,EAAsBD,SAAtB,CAAX;AACD,iBAVH;AAWE,gBAAA,EAAE,EAAES;AAXN,iBACOO,EADP;AAAA;AAAA;AAAA;AAAA,sBADF;AAeD,aA1BH,CAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AA6CD,SA/CA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAwDD;;GAnEQjB,Y;;KAAAA,Y;AAqET,eAAeA,YAAf","sourcesContent":["import Data from \"../../Data\";\nimport CustomCard from \"./CustomCard\";\nimport DisplayedCard from \"./DisplayedCard\";\n\nimport { useState } from \"react\";\nimport { AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\n\nfunction ContinerCard() {\n  const [contentId, setContentId] = useState(false);\n\n  const handleClick = (value, setter, content) => {\n    if (content) {\n      setter(false);\n      return;\n    }\n    setter(value);\n  };\n\n  return (\n    <>\n      <AnimateSharedLayout>\n        <AnimatePresence>\n          {Data.map((card) => {\n            const { mainImg, title, date, description, time } = card;\n            return (\n              <div>\n                <CustomCard\n                  key={title}\n                  img={mainImg}\n                  title={title}\n                  date={date}\n                  description={description}\n                  time={time}\n                  cb={(value) => {\n                    handleClick(value, setContentId, contentId);\n                  }}\n                  id={title}\n                />\n                {contentId &&\n                  Data.filter((card) => card.title === contentId).map(\n                    (card, index) => {\n                      const {\n                        mainImg,\n                        title,\n                        date,\n                        description,\n                        time,\n                        history,\n                      } = card;\n                      let id = title + index;\n                      return (\n                        <DisplayedCard\n                          key={id}\n                          img={mainImg}\n                          title={title}\n                          date={date}\n                          description={description}\n                          history={history}\n                          time={time}\n                          cb={(value) => {\n                            handleClick(value, setContentId, contentId);\n                          }}\n                          id={title}\n                        />\n                      );\n                    }\n                  )}\n              </div>\n            );\n          })}\n        </AnimatePresence>\n      </AnimateSharedLayout>\n    </>\n  );\n}\n\nexport default ContinerCard;\n"]},"metadata":{},"sourceType":"module"}