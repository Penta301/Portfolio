{"ast":null,"code":"var _jsxFileName = \"/home/juanemilio/Desktop/Portfolio/portfolio/src/components/CardComponent/ContinerCard.js\",\n    _s = $RefreshSig$();\n\nimport Data from \"../../Data\";\nimport CustomCard from \"./CustomCard\";\nimport DisplayedCard from \"./DisplayedCard\";\nimport { motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ContinerCard() {\n  _s();\n\n  const [contentId, setContentId] = useState(false);\n\n  const handleClick = (value, setter, content) => {\n    console.log(value, setter, content);\n\n    if (content) {\n      setter(false);\n      return;\n    }\n\n    setter(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AnimateSharedLayout, {\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: [contentId && Data.filter(card => card.title === contentId).map((card, index) => {\n          const {\n            mainImg,\n            title,\n            date,\n            description,\n            time,\n            history\n          } = card;\n          return /*#__PURE__*/_jsxDEV(motion.div, {\n            layoutId: index,\n            style: {\n              backgroundColor: \"blue\",\n              width: \"200px\",\n              height: \"200px\"\n            },\n            onClick: () => {\n              handleClick(index, setContentId, contentId);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this) // <DisplayedCard\n          //   img={mainImg}\n          //   title={title}\n          //   date={date}\n          //   description={description}\n          //   history={history}\n          //   time={time}\n          //   cb={(value) => {\n          //     handleClick(value, setContentId, contentId);\n          //   }}\n          //   id={title}\n          // />\n          ;\n        }), Data.map((card, index) => {\n          const {\n            mainImg,\n            title,\n            date,\n            description,\n            time\n          } = card;\n          return (\n            /*#__PURE__*/\n            // <CustomCard\n            //   img={mainImg}\n            //   title={title}\n            //   date={date}\n            //   description={description}\n            //   time={time}\n            //   cb={(value) => {\n            //     handleClick(value, setContentId, contentId);\n            //   }}\n            //   id={title}\n            // />\n            _jsxDEV(motion.div, {\n              layoutId: index,\n              style: {\n                backgroundColor: \"red\",\n                width: \"200px\",\n                height: \"200px\"\n              },\n              onClick: () => {\n                handleClick(index, setContentId, contentId);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          );\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ContinerCard, \"ASNudtjqLYRlUqAXMEVM7WDpnoQ=\");\n\n_c = ContinerCard;\nexport default ContinerCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContinerCard\");","map":{"version":3,"sources":["/home/juanemilio/Desktop/Portfolio/portfolio/src/components/CardComponent/ContinerCard.js"],"names":["Data","CustomCard","DisplayedCard","motion","useState","AnimateSharedLayout","AnimatePresence","ContinerCard","contentId","setContentId","handleClick","value","setter","content","console","log","filter","card","title","map","index","mainImg","date","description","time","history","backgroundColor","width","height"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,EAA8BC,eAA9B,QAAqD,eAArD;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMM,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,OAAhB,KAA4B;AAC9CC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmBC,MAAnB,EAA2BC,OAA3B;;AACA,QAAIA,OAAJ,EAAa;AACXD,MAAAA,MAAM,CAAC,KAAD,CAAN;AACA;AACD;;AACDA,IAAAA,MAAM,CAACD,KAAD,CAAN;AACD,GAPD;;AASA,sBACE;AAAA,2BACE,QAAC,mBAAD;AAAA,6BACE,QAAC,eAAD;AAAA,mBACGH,SAAS,IACRR,IAAI,CAACgB,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAeV,SAArC,EAAgDW,GAAhD,CACE,CAACF,IAAD,EAAOG,KAAP,KAAiB;AACf,gBAAM;AAAEC,YAAAA,OAAF;AAAWH,YAAAA,KAAX;AAAkBI,YAAAA,IAAlB;AAAwBC,YAAAA,WAAxB;AAAqCC,YAAAA,IAArC;AAA2CC,YAAAA;AAA3C,cACJR,IADF;AAEA,8BACE,QAAC,MAAD,CAAQ,GAAR;AACE,YAAA,QAAQ,EAAEG,KADZ;AAEE,YAAA,KAAK,EAAE;AACLM,cAAAA,eAAe,EAAE,MADZ;AAELC,cAAAA,KAAK,EAAE,OAFF;AAGLC,cAAAA,MAAM,EAAE;AAHH,aAFT;AAOE,YAAA,OAAO,EAAE,MAAM;AACblB,cAAAA,WAAW,CAACU,KAAD,EAAQX,YAAR,EAAsBD,SAAtB,CAAX;AACD;AATH;AAAA;AAAA;AAAA;AAAA,kBADF,CAYE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBF;AAyBD,SA7BH,CAFJ,EAiCGR,IAAI,CAACmB,GAAL,CAAS,CAACF,IAAD,EAAOG,KAAP,KAAiB;AACzB,gBAAM;AAAEC,YAAAA,OAAF;AAAWH,YAAAA,KAAX;AAAkBI,YAAAA,IAAlB;AAAwBC,YAAAA,WAAxB;AAAqCC,YAAAA;AAArC,cAA8CP,IAApD;AACA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAC,MAAD,CAAQ,GAAR;AACE,cAAA,QAAQ,EAAEG,KADZ;AAEE,cAAA,KAAK,EAAE;AACLM,gBAAAA,eAAe,EAAE,KADZ;AAELC,gBAAAA,KAAK,EAAE,OAFF;AAGLC,gBAAAA,MAAM,EAAE;AAHH,eAFT;AAOE,cAAA,OAAO,EAAE,MAAM;AACblB,gBAAAA,WAAW,CAACU,KAAD,EAAQX,YAAR,EAAsBD,SAAtB,CAAX;AACD;AATH;AAAA;AAAA;AAAA;AAAA;AAZF;AAwBD,SA1BA,CAjCH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmED;;GA/EQD,Y;;KAAAA,Y;AAiFT,eAAeA,YAAf","sourcesContent":["import Data from \"../../Data\";\nimport CustomCard from \"./CustomCard\";\nimport DisplayedCard from \"./DisplayedCard\";\nimport { motion } from \"framer-motion\";\n\nimport { useState } from \"react\";\nimport { AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\n\nfunction ContinerCard() {\n  const [contentId, setContentId] = useState(false);\n\n  const handleClick = (value, setter, content) => {\n    console.log(value, setter, content);\n    if (content) {\n      setter(false);\n      return;\n    }\n    setter(value);\n  };\n\n  return (\n    <>\n      <AnimateSharedLayout>\n        <AnimatePresence>\n          {contentId &&\n            Data.filter((card) => card.title === contentId).map(\n              (card, index) => {\n                const { mainImg, title, date, description, time, history } =\n                  card;\n                return (\n                  <motion.div\n                    layoutId={index}\n                    style={{\n                      backgroundColor: \"blue\",\n                      width: \"200px\",\n                      height: \"200px\",\n                    }}\n                    onClick={() => {\n                      handleClick(index, setContentId, contentId);\n                    }}\n                  ></motion.div>\n                  // <DisplayedCard\n                  //   img={mainImg}\n                  //   title={title}\n                  //   date={date}\n                  //   description={description}\n                  //   history={history}\n                  //   time={time}\n                  //   cb={(value) => {\n                  //     handleClick(value, setContentId, contentId);\n                  //   }}\n                  //   id={title}\n                  // />\n                );\n              }\n            )}\n          {Data.map((card, index) => {\n            const { mainImg, title, date, description, time } = card;\n            return (\n              // <CustomCard\n              //   img={mainImg}\n              //   title={title}\n              //   date={date}\n              //   description={description}\n              //   time={time}\n              //   cb={(value) => {\n              //     handleClick(value, setContentId, contentId);\n              //   }}\n              //   id={title}\n              // />\n              <motion.div\n                layoutId={index}\n                style={{\n                  backgroundColor: \"red\",\n                  width: \"200px\",\n                  height: \"200px\",\n                }}\n                onClick={() => {\n                  handleClick(index, setContentId, contentId);\n                }}\n              ></motion.div>\n            );\n          })}\n        </AnimatePresence>\n      </AnimateSharedLayout>\n    </>\n  );\n}\n\nexport default ContinerCard;\n"]},"metadata":{},"sourceType":"module"}