{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nfunction FilterLogic({\n  data,\n  type\n}) {\n  _s();\n\n  const cleanData = data => {\n    const cleanedData = [\"All\", ...new Set(data.map(item => item.technologies))];\n    return cleanedData;\n  };\n\n  const [filters, setFilters] = useState(cleanData(data));\n\n  const filterCategories = (data, category) => {\n    const newItems = data.filter(item => item[data] === category);\n    return newItems;\n  };\n\n  return {\n    cleanData,\n    filters,\n    setFilters,\n    filterCategories\n  };\n}\n\n_s(FilterLogic, \"f2dpoFQHobJMigXV6Nf++0SeFOE=\");\n\n_c = FilterLogic;\nexport default FilterLogic;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterLogic\");","map":{"version":3,"sources":["/home/juanemilio/Desktop/Portfolio/portfolio/src/helpers/Filter/FilterLogic.js"],"names":["useState","FilterLogic","data","type","cleanData","cleanedData","Set","map","item","technologies","filters","setFilters","filterCategories","category","newItems","filter"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAArB,EAAqC;AAAA;;AACnC,QAAMC,SAAS,GAAIF,IAAD,IAAU;AAC1B,UAAMG,WAAW,GAAG,CAClB,KADkB,EAElB,GAAG,IAAIC,GAAJ,CAAQJ,IAAI,CAACK,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAACC,YAAxB,CAAR,CAFe,CAApB;AAIA,WAAOJ,WAAP;AACD,GAND;;AAQA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAACI,SAAS,CAACF,IAAD,CAAV,CAAtC;;AAEA,QAAMU,gBAAgB,GAAG,CAACV,IAAD,EAAOW,QAAP,KAAoB;AAC3C,UAAMC,QAAQ,GAAGZ,IAAI,CAACa,MAAL,CAAaP,IAAD,IAAUA,IAAI,CAACN,IAAD,CAAJ,KAAeW,QAArC,CAAjB;AACA,WAAOC,QAAP;AACD,GAHD;;AAKA,SAAO;AACLV,IAAAA,SADK;AAELM,IAAAA,OAFK;AAGLC,IAAAA,UAHK;AAILC,IAAAA;AAJK,GAAP;AAMD;;GAtBQX,W;;KAAAA,W;AAwBT,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\n\nfunction FilterLogic({ data, type }) {\n  const cleanData = (data) => {\n    const cleanedData = [\n      \"All\",\n      ...new Set(data.map((item) => item.technologies)),\n    ];\n    return cleanedData;\n  };\n\n  const [filters, setFilters] = useState(cleanData(data));\n\n  const filterCategories = (data, category) => {\n    const newItems = data.filter((item) => item[data] === category);\n    return newItems;\n  };\n\n  return {\n    cleanData,\n    filters,\n    setFilters,\n    filterCategories,\n  };\n}\n\nexport default FilterLogic;\n"]},"metadata":{},"sourceType":"module"}